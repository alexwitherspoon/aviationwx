# Nginx configuration for AviationWX
# Use this when running behind Nginx reverse proxy

upstream aviationwx {
    server web:80;
}

# Proxy cache for webcam images (http{} context via conf.d include)
proxy_cache_path /var/cache/nginx/webcam levels=1:2 keys_zone=webcam_cache:10m max_size=200m inactive=10m use_temp_path=off;

# Compression settings (gzip)
# Note: Images are excluded from compression (only include text-based types)
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
# Only compress text-based content, NOT images (jpg, jpeg, png, gif, webp are excluded)
gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
gzip_min_length 1000;
gzip_disable "msie6";

# Brotli compression (if module available)
# Note: brotli module may not be available in all Nginx builds
# Uncomment if using nginx with brotli module installed
# brotli on;
# brotli_comp_level 6;
# brotli_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
# brotli_min_length 1000;

# Redirect all HTTP to HTTPS
server {
    listen 80;
    server_name aviationwx.org *.aviationwx.org;
    return 301 https://$host$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name aviationwx.org *.aviationwx.org;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # Handle wildcard subdomains (any ICAO code)
    # Examples: kspb.aviationwx.org, kxxx.aviationwx.org
    # Works with ANY subdomain without creating them individually!

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; connect-src 'self'; frame-ancestors 'self'; base-uri 'self'; form-action 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=(), fullscreen=(self), picture-in-picture=()" always;
    
        # Rate limiting zones (for blocking abuse)
        # Increased limits per request: general 30r/s, api 30r/s
        limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
        limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;

    # Logging
    access_log /var/log/nginx/aviationwx_access.log;
    error_log /var/log/nginx/aviationwx_error.log;

    # Block known malicious user agents (Shellshock, etc.)
    if ($http_user_agent ~* "\(\)\s*\{\s*:\s*;\s*\};") {
        return 403;
    }
    
    # Block common exploit patterns
    if ($http_user_agent ~* "(bash|wget|curl).*sh|/bin/bash|busybox") {
        return 403;
    }
    
    # Main location
    location / {
            # Rate limiting (30 requests per second per IP, burst 80)
            limit_req zone=general burst=80 nodelay;
        
        proxy_pass http://aviationwx;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for long-running requests (webcam fetching)
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Weather API (no proxy cache)
    location ~ ^/weather\.php$ {
            # API rate limiting (30 requests per second, burst 80)
            limit_req zone=api burst=80 nodelay;

        proxy_pass http://aviationwx;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API responses: tight referrer policy
        add_header Referrer-Policy "same-origin" always;
    }

    # Webcam API - enable internal proxy_cache per id/cam/fmt/v
    location ~ ^/webcam\.php$ {
            # API rate limiting (30 requests per second, burst 80)
            limit_req zone=api burst=80 nodelay;

        # Avoid caching meta requests (mtime=1)
        set $no_cache 0;
        if ($arg_mtime = 1) { set $no_cache 1; }

        # Proxy cache config
        proxy_cache           webcam_cache;
        proxy_cache_key       $scheme$proxy_host$request_uri;
        proxy_cache_lock      on;
        proxy_cache_use_stale updating error timeout http_500 http_502 http_503 http_504;
        proxy_ignore_headers  Cache-Control Expires Set-Cookie;
        proxy_no_cache        $no_cache;
        proxy_cache_bypass    $no_cache;
        proxy_cache_valid     200 1m;
        proxy_cache_valid     304 0;
        add_header X-Proxy-Cache $upstream_cache_status always;

        # Preserve Content-Type header from PHP backend (critical for images)
        # Explicitly ensure Content-Type is passed from upstream (though default behavior)
        proxy_pass_header     Content-Type;
        
        # Disable compression for image responses (prevents corruption)
        # Remove Accept-Encoding so backend doesn't compress images
        proxy_set_header      Accept-Encoding "";
        
        # Don't allow Nginx to set default Content-Type - use upstream header
        # Content-Type from PHP must be preserved exactly as sent

        proxy_pass http://aviationwx;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Don't apply security headers that override Content-Type
        # Content-Type from PHP must be preserved for images
    }

    # Static files (set client cache headers for 1 hour)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        proxy_pass http://aviationwx;
        expires 1h;
        add_header Cache-Control "public, immutable";
    }

    # Deny access to sensitive files
    location ~ /airports\.json$ {
        deny all;
        return 404;
    }
}

